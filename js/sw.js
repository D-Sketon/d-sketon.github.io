let preCache=["/images/taichi.png","/images/banner.webp","/images/taichi-fill.png","/css/loader.css","/css/style.css","/js/script.js"];preCache=preCache.map((e=>pathname+e.slice(1)));const cacheDomain=["fonts.googleapis.com","npm.webcache.cn","unpkg.com","fastly.jsdelivr.net","cdn.jsdelivr.net"];async function cacheRequest(e){const s=await fetch(e,{mode:"no-cors"});return(await caches.open(VERSION)).put(e,s.clone()),s}async function respondRequest(e){const s=await caches.match(e);return s||cacheRequest(e)}self.addEventListener("install",(e=>{console.log(`Service Worker ${VERSION} installing.`),e.waitUntil(caches.open(VERSION).then((e=>e.addAll(preCache))))})),self.addEventListener("fetch",(e=>{const s=new URL(e.request.url);cacheDomain.includes(s.hostname)?e.respondWith(respondRequest(e.request)):"POST"===e.request.method||"GET"===e.request.method&&s.search?e.respondWith(fetch(e.request,{mode:"no-cors"})):e.respondWith(respondRequest(e.request,{mode:"no-cors"}))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(VERSION!==e)return console.log(`Service Worker: deleting old cache ${e}`),caches.delete(e)})))))),console.log(`Service Worker ${VERSION} activated.`)})),"serviceWorker"in navigator&&navigator.serviceWorker.register(`${pathname}sw.js`).then((e=>{console.log("Service Worker 注册成功: ",e)})).catch((e=>{console.log("Service Worker 注册失败: ",e)}));